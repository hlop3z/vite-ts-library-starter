export default {
  Base64: {
    kind: "string",
    json: "string",
    docs: "Represents binary data encoded as a Base64 string, commonly used for file and image encoding.",
    docs_text: "RFC 4648, Section 4",
    docs_link: "https://datatracker.ietf.org/doc/html/rfc4648#section-4",
  },
  Binary: {
    kind: "string",
    json: "string",
    docs: "Represents raw binary data in string form, typically handled at transport or storage level.",
    docs_text: null,
    docs_link: null,
  },
  Bool: {
    kind: "boolean",
    json: "boolean",
    docs: "Represents a boolean value: `true` or `false`.",
    docs_text: null,
    docs_link: null,
  },
  Decimal: {
    kind: "number",
    json: "string",
    docs: "Represents a high-precision decimal number (useful for financial or scientific data). Serialized as a string to preserve precision.",
    docs_text: null,
    docs_link: null,
  },
  Float32: {
    kind: "number",
    json: "number",
    docs: "Represents a 32-bit IEEE-754 floating-point number.",
    docs_text: null,
    docs_link: null,
  },
  Float64: {
    kind: "number",
    json: "string",
    docs: "Represents a 64-bit floating-point number, serialized as a string to avoid precision loss in JSON.",
    docs_text: null,
    docs_link: null,
  },
  Int32: {
    kind: "integer",
    json: "integer",
    docs: "Represents a 32-bit signed integer (range: −2³¹ to 2³¹−1).",
    docs_text: null,
    docs_link: null,
  },
  Int64: {
    kind: "integer",
    json: "string",
    docs: "Represents a 64-bit signed integer, serialized as a string for precision safety in JSON.",
    docs_text: null,
    docs_link: null,
  },
  String: {
    kind: "string",
    json: "string",
    docs: "Represents generic single-line textual data (Frontend: Input field).",
    docs_text: null,
    docs_link: null,
  },
  Text: {
    kind: "string",
    json: "string",
    docs: "Represents multi-line text or rich content (Frontend: Textarea or Markdown).",
    docs_text: null,
    docs_link: null,
  },
  ID: {
    kind: "string",
    json: "string",
    docs: "Represents a unique identifier (UUID, ULID, or database ID) as a string.",
    docs_text: null,
    docs_link: null,
  },
  Dict: {
    kind: "object",
    json: "object",
    docs: "Represents a key-value pair object. Follows JSON object structure.",
    docs_text: "ECMA-404",
    docs_link:
      "https://ecma-international.org/publications-and-standards/standards/ecma-404/",
  },
  List: {
    kind: "array",
    json: "array",
    docs: "Represents an ordered collection (list/array) of values.",
    docs_text: "ECMA-404",
    docs_link:
      "https://ecma-international.org/publications-and-standards/standards/ecma-404/",
  },
  Date: {
    kind: "date",
    json: "string",
    docs: "Represents a calendar date in ISO-8601 format (`YYYY-MM-DD`).",
    docs_text: "ISO-8601",
    docs_link: "https://scalars.graphql.org/andimarek/date-time",
  },
  DateTime: {
    kind: "date",
    json: "string",
    docs: "Represents a date and time string in ISO-8601 format (`YYYY-MM-DDTHH:MM:SSZ`).",
    docs_text: "ISO-8601",
    docs_link: "https://scalars.graphql.org/andimarek/date-time",
  },
  Time: {
    kind: "date",
    json: "string",
    docs: "Represents a time string in ISO-8601 format (`HH:MM:SS`), without date context.",
    docs_text: "ISO-8601",
    docs_link: "https://scalars.graphql.org/andimarek/date-time",
  },
};
